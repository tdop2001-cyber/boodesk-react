
# -*- mode: python ; coding: utf-8 -*-

a = Analysis(
    ['app23a.py'],
    pathex=[],
    binaries=[],
    datas=[
        ('*.png', '.'),  # Incluir todos os ícones PNG
        ('*.db', '.'),   # Incluir banco de dados SQLite
        ('*.json', '.'), # Incluir arquivos de configuração JSON
        ('requirements.txt', '.'),
        ('requirements_postgresql.txt', '.'),
        ('requirements_google_calendar.txt', '.'),
    ],
    hiddenimports=[
        'tkinter',
        'tkinter.ttk',
        'tkinter.messagebox',
        'tkinter.simpledialog',
        'tkinter.colorchooser',
        'tkinter.filedialog',
        'ttkthemes',
        'pandas',
        'json',
        'os',
        'random',
        'winsound',  # Para Windows
        'datetime',
        'functools',
        'PIL',
        'PIL.Image',
        'PIL.ImageTk',
        'matplotlib',
        'matplotlib.pyplot',
        'matplotlib.backends.backend_tkagg',
        'sys',
        'uuid',
        'tkcalendar',
        'calendar',
        'threading',
        'time',
        'psutil',
        'signal',
        'subprocess',
        'shutil',
        'base64',
        'requests',
        'urllib.parse',
        'smtplib',
        'email.mime.text',
        'email.mime.multipart',
        'email.mime.base',
        'email.encoders',
        'ssl',
        'pickle',
        'google.auth.transport.requests',
        'google_auth_oauthlib.flow',
        'googleapiclient.discovery',
        'googleapiclient.errors',
        'webbrowser',
        'database_postgres',
        'sqlite3',
        'numpy',
        'matplotlib.backends.backend_tkagg',
        'matplotlib.figure',
        'matplotlib.axes',
        'matplotlib.patches',
        'matplotlib.lines',
        'matplotlib.text',
        'matplotlib.transforms',
        'matplotlib.path',
        'matplotlib.colors',
        'matplotlib.cm',
        'matplotlib.collections',
    ],
    hookspath=[],
    hooksconfig={},
    runtime_hooks=[],
    excludes=[],
    win_no_prefer_redirects=False,
    win_private_assemblies=False,
    cipher=None,
    noarchive=False,
)

pyz = PYZ(a.pure, a.zipped_data, cipher=None)

exe = EXE(
    pyz,
    a.scripts,
    a.binaries,
    a.zipfiles,
    a.datas,
    [],
    name='BoodeskApp_windows',
    debug=False,
    bootloader_ignore_signals=False,
    strip=False,
    upx=True,
    upx_exclude=[],
    runtime_tmpdir=None,
    console=False,
    disable_windowed_traceback=False,
    argv_emulation=False,
    target_arch=None,
    codesign_identity=None,
    entitlements_file=None,
    icon='LOGO.png' if os.path.exists('LOGO.png') else None,
)
